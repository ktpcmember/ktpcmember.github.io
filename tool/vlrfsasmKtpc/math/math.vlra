
{mi.sizeList; ; (sizeList.bin)}
{mi.replaceList; ; (replaceList.bin)}

[Opcode:{0:String, 1:Text, 2:Concatenate, 3:Attachment, 4:Overline, 5:Underline, 6:Sqrt, 7:Root, 8:Fraction, 9:SmallFraction}]

{mh.overline Content; ;
  (mh.overline.generalized
    (mc.generalize Content)
  )
}
{mh.overline.generalized Content; ;
  (mc.encode
    Content
    4
    ('
      (mc.getSizeX Content)
      (+ (mc.getSizeH Content) (mf.immI 2))
      (mc.getSizeL Content)
    )
  )
}

{mh.math Content; ;
  (mh.svg (mc.generalize Content))
}
{mh.svg Content; ;
  (hb.tagACE
    "svg"
    "cSvg"
    ('
      (hb.attribute
        "width"
        ('
          (mf.ceilISb (mc.getSizeX Content))
          "px"
        )
      )
      (hb.attribute
        "height"
        ('
          (mf.ceilISb (mc.getSizeY Content))
          "px"
        )
      )
      (hb.attribute "viewBox"
        ('
          "0 0 "
          (mf.ceilISb (mc.getSizeX Content))
          " "
          (mf.ceilISb (mc.getSizeY Content))
        )
      )
      (hb.attribute "xmlns" "http://www.w3.org/2000/svg")
      (hb.attribute "stroke" "none")
      (hb.attribute "fill" "black")
    )
    [(mr.render Content (: 0 32) (: 0 8))]
    ('
      "[" (c.convertISb (# (mc.generalize Content)) 16) "]"
      (mt.convertASb (mc.generalize Content))
    )
  )
}

{mt.convertASb A 16; ; (' (c.convertISb A 16) " ")}

{mr.render Content Base Scale; ;
  (?
    (# Content)
    (?
      (<= (mc.getOpcode Content) 7)
      (?
        (<= (mc.getOpcode Content) 3)
        (?
          (<= (mc.getOpcode Content) 1)
          (?
            (== (mc.getOpcode Content) 0)
            (mr.string Content Base Scale)
            (mr.text Content Base Scale)
          )
          (?
            (== (mc.getOpcode Content) 2)
            (mr.concatenate
              (mc.decode Content)
              Base
              Scale
            )
            (mr.attachment Content Base Scale)
          )
        )
        (?
          (<= (mc.getOpcode Content) 5)
          (?
            (== (mc.getOpcode Content) 4)
            (mr.overline Content Base Scale)
            (mr.underline Content Base Scale)
          )
          (?
            (== (mc.getOpcode Content) 6)
            (mr.sqrt Content Base Scale)
            (mr.root Content Base Scale)
          )
        )
      )
      (?
        (== (mc.getOpcode Content) 8)
        (mr.fraction Content Base Scale)
        (mr.smallFraction Content Base Scale)
      )
    )
    (c.empty)
  )
}
{mr.string Content Base Scale; ;
  (hb.tagAE "text"
    ('
      (hb.attribute "x" (mf.ceilISb (> Base 16)))
      (hb.attribute "y"
        (mf.ceilISb
          (+
            (: Base 16)
            (ms.scale (mc.getSizeH Content) Scale)
          )
        )
      )
      (hb.attribute "font-size"
        ('
          (mf.ceilISb
            (ms.scale (mf.immI 16) Scale)
          )
          "px"
        )
      )
    )
    (mc.decode Content)
  )
}
{mr.concatenate Content Base Scale; ;
  (?
    (# Content)
    ('
      (mr.render
        (mc.getFirstElement Content)
        Base
        Scale
      )
      (mr.concatenate
        (mc.getRestElementList Content)
        ('
          (+
            (> Base 16)
            (ms.scale
              (mc.getSizeX
                (mc.getFirstElement Content)
              )
              Scale
            )
          )
          (: Base 16)
        )
        Scale
      )
    )
    (c.empty)
  )
}
{mr.overline Content Base Scale; ;
  ('
    (hb.xmlTagA "line"
      ('
        (hb.attribute "x1"
          (mf.truncateISb (> Base 16))
        )
        (hb.attribute "x2"
          (mf.truncateISb
            (+
              (> Base 16)
              (ms.scale
                (mc.getSizeX Content)
                Scale
              )
            )
          )
        )
        (hb.attribute "y1"
          (mf.truncateISb
            (+ (: Base 16) (mf.immI 1))
          )
        )
        (hb.attribute "y2"
          (mf.truncateISb
            (+ (: Base 16) (mf.immI 1))
          )
        )
        (hb.attribute "stroke" "black")
      )
    )
    (mr.render
      (mc.decode Content)
      ('
        (> Base 16)
        (+ (: Base 16) (mf.immI 2))
      )
      Scale
    )
  )
}

{mc.generalize Content; ;
  (mc.encodeS
    (mc.generalize.loop
      Content
      ('
        (: 0 48)
        (: 0 16) [0:Raw, 1:ContainerBegin, 2:Container]
        (: 0 16)
        (: (> (# Content) 4) 16)
      )
    )
    2
  )
}
{mc.generalize.loop Content 16 Condition; ;
  (?
    (!= (: Condition 16) 1)
    (?
      (c.getRange Condition 32 16)
      ('
        (?
          (== (c.getRange Condition 32 16) 1)
          (: 0 16)
          (c.empty)
        )
        Content
      )
      (?
        Content
        (c.empty)
        (?
          (== (# Condition) 96)
          (c.empty)
          (mc.encode
            (> Condition 96)
            0
            (ms.getSizeSb (> Condition 96))
          )
        )
      )
    )
    (?
      (c.getRange Condition 32 16)
      ('
        Content
        (c.getRange Condition 64 32)
        (c.max (c.getRange Condition 48 16) Content)
      )
      ('
        (mc.encode
          (' (> Condition 96) (me.replace Content))
          0
          (ms.getSizeSb
            (' (> Condition 96) (me.replace Content))
          )
        )
        (+
          (c.getRange Condition 80 16)
          (ms.getSizeXSb
            ('
              (> Condition 96)
              (me.replace Content)
            )
          )
        )
        (c.max
          (c.getRange Condition 64 16)
          (mf.immI 16)
        )
        (c.getRange Condition 48 16)
      )
    )
  );
  ('
    (?
      (c.getRange Condition 32 16)
      (c.empty)
      (' (> Condition 96) (me.replace Content))
    )
    (?
      (&
        (== (c.getRange Condition 32 16) 0)
        (== Content 0)
        (!= (# Condition) 96)
      )
      ('
        (+
          (c.getRange Condition 80 16)
          (ms.getSizeXSb (> Condition 96))
        )
        (c.max
          (c.getRange Condition 64 16)
          (mf.immI 16)
        )
        (c.getRange Condition 48 16)
      )
      (?
        (&
          (== (c.getRange Condition 32 16) 2)
          (<= (c.getRange Condition 16 16) 5)
        )
        (?
          (== (c.getRange Condition 16 16) 5)
          ('
            (+ (c.getRange Condition 80 16) Condition)
            (c.getRange Condition 48 32)
          )
          (?
            (== (c.getRange Condition 16 16) 4)
            ('
              (c.getRange Condition 80 16)
              (c.max (c.getRange Condition 64 16) Condition)
              (c.getRange Condition 48 16)
            )
            ('
              (c.getRange Condition 64 32)
              (c.max (c.getRange Condition 48 16) Condition)
            )
          )
        )
        (c.getRange Condition 48 48)
      )
    )
    (:
      (?
        (c.getRange Condition 32 16)
        (?
          (== (c.getRange Condition 32 16) 1)
          2
          (?
            (== (c.getRange Condition 16 16) 3)
            0
            2
          )
        )
        (? Content 0 1)
      )
      16
    )
    (?
      (== (c.getRange Condition 32 16) 1)
      (- (c.getRange Condition 16 16) 1)
      Content
    )
    (- (: Condition 16) 1)
  )
}
{mc.encode Content Opcode Size; ;
  ('
    (: $0000 16)
    (: (+ (> (# Content) 4) 6) 16)
    Content
    (: Opcode 16)
    (: Size 48)
  )
}
{mc.encodeS Content Opcode; ;
  (mc.encode
    (> Content 48)
    Opcode
    (: Content 48)
  )
}
{mc.decode Container; ;
  (c.getRange Container 64 (- (# Container) 96))
}
{mc.getFirstElement List; ;
  (>
    List
    (- (# List) (< (c.getRange List (- (# List) 32) 16) 4))
  )
}
{mc.getRestElementList List; ;
  (:
    List
    (- (# List) (< (c.getRange List (- (# List) 32) 16) 4))
  )
}
{mc.getSize Container; ; (: Container 48)}
{mc.getSizeX Container; ;
  (> (mc.getSize Container) 32)
}
{mc.getSizeH Container; ;
  (c.getRange (mc.getSize Container) 16 16)
}
{mc.getSizeL Container; ;
  (: Container 16)
}
{mc.getSizeY Container; ;
  (+
    (mc.getSizeH Container)
    (mc.getSizeL Container)
  )
}
{mc.getOpcode Container; ;
  (c.getRange Container 48 16)
}

{mf.immI A; ; (mf.immF (< A 7))}
{mf.immF A; ; (: A 16)}
{mf.mul A B; ;
  (: (> (*- (:- A 32) (:- B 32)) 7) 16)
}
{mf.ceil A; ; (> (+ A $7F) 7)}
{mf.ceilISb A; ;
  (c.convertISb (mf.ceil A) 10)
}
{mf.truncate A; ; (> (+ A $40) 7)}
{mf.truncateISb A; ;
  (c.convertISb (mf.truncate A) 10)
}

{ms.getSizeSb Content; ;
  ('
    (ms.getSizeXSb Content)
    (mf.immI 16)
    (mf.immI 0)
  )
}
{ms.getSizeXSb Content; ;
  (ms.getSizeSb.loop
    Content
    ('
      (mf.immI 0)
      (: (c.getLengthSx Content) 16)
    )
  )
}
{ms.getSizeSb.loop Content 16 Condition; ;
  (?
    (== (: Condition 16) 1)
    (+
      (c.getRange Condition 16 16)
      (ms.getSizeCharacter
        (?
          (== (c.getRange Content 10 6) %110111)
          (|
            (' (> Condition 32) (: Content 10))
            $10000
          )
          Content
        )
      )
    )
    (c.empty)
  );
  ('
    (?
      (== (c.getRange Content 10 6) %110110)
      (: Content 10)
      (c.empty)
    )
    (+
      (c.getRange Condition 16 16)
      (?
        (== (c.getRange Content 10 6) %110110)
        0
        (ms.getSizeCharacter
          (?
            (== (c.getRange Content 10 6) %110111)
            (|
              (' (> Condition 32) (: Content 10))
              $10000
            )
            Content
          )
        )
      )
    )
    (- (: Condition 16) 1)
  )
}
{ms.getSizeCharacter Character; ;
  (mf.mul
    (: (ms.getSizeCharacter.loop (mi.sizeList) Character) 16)
    (mf.immF $0106)
  )
}
{ms.getSizeCharacter.loop List 64 Character; ;
  (? (== (> List 32) Character) (c.getRange List 16 16) (c.empty))
}
{ms.scale Size 16 Scale; ;
  (mf.mul Size (ms.coefficient Scale))
}
{ms.coefficient Scale; ;
  (c.getRange
    (ms.coefficient.list)
    (< Scale 4)
    16
  )
}
{ms.coefficient.list; ;
  ('
    (mf.immF $36)
    (mf.immF $48)
    (mf.immF $60)
    (mf.immF $80)
  )
}

{me.replace Character; ;
  (me.replace.select
    (me.replace.loop (mi.replaceList) Character)
    Character
  )
}
{me.replace.loop List 48 Character; ;
  (?
    (== (> List 32) Character)
    (?
      (c.getRange List 16 16)
      ('
        (: %110110 6)
        (- (c.getRange List 10 10) $40)
        (: %110111 6)
        (: List 10)
      )
      (: List 16)
    )
    (c.empty)
  )
}
{me.replace.select Result Original; ;
  (? (# Result) Result Original)
}
