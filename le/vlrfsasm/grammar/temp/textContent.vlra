
{ht.summary.caption; ; (' (hc.p (' "本章では、Vlrfsasmの文法について解説します。")))}
{ht.summary.previousChapter; ; (' (hc.p (' "前章の最後で「Hello world!」を出力しましたが、実のところあれはかなり高度な内容を含むので、解説は後の章で行います。")))}
{ht.value.caption; ; (' (hc.p (' "Vlrfsasmでは、データのことを「値」と呼びます。")))}
{ht.value.body; ; (' (hc.p (' "値は、順序と方向をもつ1次元のビット列で表現されます。値には、型などの情報を分けて付加することはできません。全てこのビット列に埋めこむ必要があるので、利用する構造体には、判別できる情報を予め加えましょう。")))}
{ht.value.width; ; (' (hc.p (' "値に含まれるビットの数を、「幅」と言います。「長さ」や「大きさ」も、Vlrfsasmにおいては同義語です。値は、0以上524288以下の個数のビットを含むことができますが、この範囲外の幅をもつ値は処理できず、エラーとなります。なお、この上限は、65536バイトや64KBとも言い換えられます。")))}
{ht.syntax.caption; ; (' (hc.p (' "ほとんどのプログラミング言語には文字があり、その並べ方が規定されています。Vlrfsasmにおいても、いくらかの決まりがありますが、多くは直感的に理解できると思います。")))}
{ht.syntax.character; ; (' (hc.p (' "Vlrfsasmでは、Unicodeの全ての文字を許容していますが、特別な意味をもつものはASCIIの範囲のみです。")) (hc.p (' (hx.TMT (' "Vlrfsasmで特別な意味を持つ字") (' (hi.character.txt))))) (hc.p (' "これ以外の文字、例えば" (hx.T (' "Z")) "、" (hx.T (' "_")) "、" (hx.T (' "σ")) "、" (hx.T (' "じ")) "、" (hx.T (' "字")) "、" (hx.T (' "자")) "などは自由に使って構いません。しかし、特に日本語の設定での入力中は、全角スペースを避けましょう。Vlrfsasmはこれと半角スペースとを区別しますが、見た目にはわからないので、バグを生みます。")))}
{ht.syntax.token; ; (' (hc.p (' "どんな言語でも、1字では意味を全て区別できません。いくつかの字をまとめ、単語として解釈することになります。英語ならスペースで区切れば単語を切り出せます。Vlrfsasmにおいても、区切り文字と括弧、文字列リテラル標識とコメント標識で単語を分けます。前節の文字一覧を参照してください。また、英語であれば記号" (hx.T (' ".")) "や" (hx.T (' "?")) "は単語として認められませんが、Vlrfsasmでは認めます。そこで、Vlrfsasmでは、これらの意味のまとまりのことを「符」と呼ぶことにしています。")))}
{ht.syntax.comment; ; (' (hc.p (' "動くプログラムと読みやすいプログラムは違います。他の人が読む場合、あるいは未来の自分が読む場合を考えて、簡単なメモを残しておくと、生産性がとても上がります。もちろん、プログラム中に突然、日本語や英語が書くわけにはいきません。Vlrfsasmはこのための「コメント」という機能を持っています。コメント開始標識" (hx.T (' "[")) "からコメント終了標識" (hx.T (' "]")) "までは、符として解釈されません。")))}
{ht.literal.caption; ; (' (hc.p (' "Vlrfsasmはデータを変換して出力するプログラムです。変換対象のデータを入力する方法は2つあります。一方がソースファイル内に記述するもので、リテラルと呼ばれます。もう一方の生ファイルについては、後の章で説明します。")))}
{ht.literal.numeral; ; (' (hc.p (' "リテラルはさらに2種類に分けられます。片方は数値をそのまま記述する「数値リテラル」です。Vlrfsasmのコード中で、" (hx.uRed (' "数字")) "または後述の" (hx.uBlue (' "基数接頭辞")) "から始まる単語は、数値リテラルとして認識されます。")) (hc.p (' (hx.vMT (' "数値リテラルの始めの文字") (' "[?u;uRed]0123456789[?e][?u;uBlue]$%[?e]")))) (hc.p (' "数値リテラルによる値の幅は、リテラルの桁数などに関わらず、64ビットになります。これを超える長さの値を表したいときは、後述の結合関数や、生ファイルを使うことになります。")) (hc.p (' "数値リテラルの途中には、" (hx.v (' "-")) "や" (hx.v (' "_")) "のような記号を含めることができます。長いリテラルの桁区切りに活用しましょう。")))}
{ht.literal.prefix; ; (' (hc.p (' "数値リテラルでは、以下のように3種類の基数が使えます。")) (hc.table (' "接頭辞と基数") (' "cTAC") (' (hc.tr (' (hc.td (' "基数") "") (hc.td (' "記数法") "") (hc.td (' "接頭辞") "") (hc.td (' "例1") "") (hc.td (' "例2") ""))) (hc.tr (' (hc.td (' "2") "") (hc.td (' "二進法") "") (hc.td (' (hx.v (' "%")) "") "") (hc.td (' (hx.v (' "%1011")) "") "") (hc.td (' (hx.v (' "%01001110")) "") ""))) (hc.tr (' (hc.td (' "10") "") (hc.td (' "十進法") "") (hc.td (' "なし") "") (hc.td (' (hx.v (' "11")) "") "") (hc.td (' (hx.v (' "78")) "") ""))) (hc.tr (' (hc.td (' "16") "") (hc.td (' "十六進法") "") (hc.td (' (hx.v (' "$")) "") "") (hc.td (' (hx.v (' "$B")) "") "") (hc.td (' (hx.v (' "$4E")) "") ""))))) (hc.p (' "どの表記でも、値は等しいので、記述時にわかりやすいもので書きましょう。")) (hc.p (' "なお、負の数を表す接頭辞はありません。正の数を書いてから符号を反転させます。")))}
{ht.literal.string; ; (' (hc.p (' "ご存知の通り、文字列はビット列です。Vlrfsasmでは、文字コードをUnicodeに統一しており、符号化方式はUtf-16BEを標準として他の形式との変換機能を提供します。リテラルのもう一方はこの文字列で、やはりUTF-16BEのビット列として扱われます。幅は1文字につき16ビットで、サロゲートペアがあれば32ビットです。")) (hc.p (' "文字列リテラルは、文字列を二重引用符" (hx.v (' "\"")) "で囲うことで表します。例えば、" (hx.v (' "\"文字列A\"")) "は、幅が64ビットですから、" (hx.v (' "$6587-5B57-5217-0041")) "と書くのと同じことです。")))}
{ht.literal.escape; ; (' (hc.p (' "さて、文字列は二重引用符で囲むと書きましたが、二重引用符を文字列に入れたい場合はどうすればよいのでしょうか。このとき、特殊な表記を用います。記号" (hx.T (' "\\")) "に続く文字に、通常と異なる意味を持たせるのです。この記号には、バックスラッシュや円記号など、環境によって様々な表示揺れがあります。Vlrfsasmの作者は、これを文字コードの数値から「5C」と呼んでいます。")) (hc.table (' "エスケープシーケンス") (' "cTAC") (' (hc.tr (' (hc.td (' "表記") "") (hc.td (' "16ビットの解釈値") ""))) (hc.tr (' (hc.td (' (hx.v (' "\"\\r\"")) "") "") (hc.td (' "$000D") ""))) (hc.tr (' (hc.td (' (hx.v (' "\"\\n\"")) "") "") (hc.td (' "$000A") ""))) (hc.tr (' (hc.td (' (hx.v (' "\"\\\"\"")) "") "") (hc.td (' "$0022") ""))) (hc.tr (' (hc.td (' (hx.v (' "\"\\\\\"")) "") "") (hc.td (' "$005C") ""))))) (hc.p (' "なお、文字列リテラルが複数行に渡る場合、改行コードは" (hx.v (' "\"\\r\\n\"")) "になります。")))}