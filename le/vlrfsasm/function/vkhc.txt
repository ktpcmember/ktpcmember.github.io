
ht.summary.caption
Vlrfsasmは、純粋な関数型言語です。別の言い方をすれば、関数以外にプログラミング要素はありません。関数を使いこなすことができれば、Vlrfsasmでできることはほぼ全てできます。

ht.summary.error
本章以降、実行するとエラーが発生する可能性があります。指定した[P;.log]ファイルに書き込まれているはずなので、[l;エラーの章;../error/error.html]と一緒に読んでください。

ht.definition.caption
まずは関数の定義を学びましょう。
]関数の要素]tXC;名前;関数を他の関数と区別する識別子
;引数;実行前に関数に渡される値
;返り値;関数から実行後に返される値

ht.definition.name
関数の名前には、制限があります。
]]tXC;規則;良い例;悪い例1;悪い例2
;単一の符であること;[v;getSecondElement];[v;get element2];[v;getElement(second)]
;リテラルの形でないこと;[v;階乗];[v;"factorial"];[v;0x66]
;唯一の名前であること;[v;ifContainedIt]と[v;ifContainEdit];[v;ifcontainedit];

ht.definition.argument
関数のうち、どのように呼び出しても同じ結果が返ってくるものを、定数関数といいます。
逆に言えば、定数関数以外の関数は、条件によって異なる結果を返します。この条件を関数に与えるのが引数です。ただし、Vlrfsasmにおいては、関数が使わない引数を持っていても構いません。
引数の数は1つの関数につき1通りのみです。全ての値が引数になれます。前章の通り、型はありません。また、1つの関数が17個以上の引数をもつことはできません。
引数の名前の規則は、前項に示した関数の名前の規則とほぼ同じです。ただし、他の関数の引数とは、名前が被っていても構いません。類似の関数であれば、引数名が共通であると読みやすいでしょう。

ht.definition.return
関数を実行すると、結果が返されます。Vlrfsasmにおいては、必ずちょうど1つの値を返さなくてはなりません。

ht.definition.syntax
実際に関数を定義する構文は、以下の通りです。
[vMT;関数定義;,(hi.definition.vlra.txt)]
ここで、[uRed;関数名]と[uBlue;返り値]が必ず存在し、[uGreen;引数]が任意にあることがわかると思います。

ht.definition.position
関数の定義位置は、言語によって異なります。
]定義位置の主な例]tXC;A;関数を呼び出す位置より前
;B;プログラムの実行時より前
;C;関数を呼び出す時より前
;D;プログラムが終了する前
VlrfsasmはCにあたります。実行されない関数は未定義であっても構わないのがBとの違いです。
